FROM appertaopeneyes/base-apache:trusty

ARG BUILD_BRANCH="v2.3"
ARG BUILD_ORG="appertafoundation"
ARG BUILD_WROOT="/var/www/openeyes"
ARG BUILD_SAMPLE="TRUE"
ARG BUILD_LOCAL_DB="TRUE"
	# By default we expect an external database container to be used
	# Set this arg to TRUE to install mariadb inside the container

ARG DEBIAN_FRONTEND="noninteractive"

ENV WROOT="$BUILD_WROOT"

ENV TZ="Europe/London"
ENV OE_MODE="LIVE"
ENV LOCAL_DB=${BUILD_LOCAL_DB}
ENV BUILD_BRANCH=$BUILD_BRANCH
ENV SSH_PRIVATE_KEY=""
## Used by some scripts to determine if they are running in a container
ENV DOCKER_CONTAINER="TRUE"
ENV USER=root

## Database connection credentials:
## It is STRONGLY recommended to change the password for production environments
## It is STRONGLY recommended to use docker secrets for DATABASE_PASS, rather than env variables
## defaults are localhost; openeyes; 3306; openeyes; openeyes
# ENV DATABASE_HOST="localhost"
# ENV DATABASE_NAME="openeyes"
# ENV DATABASE_PORT="3306"
# ENV DATABASE_USER="openeyes"
# ENV DATABASE_PASS="openeyes"
ENV USE_DEMO_DATA="TRUE"

ENV GIT_ORG=$BUILD_ORG
ENV GIT_USER=""
ENV GIT_EMAIL=""

## MySQL/MariaDB root login credentials (used for install / reset scripts)
## It is strongly recommended that you use docker secrets or similar methods
## To set these, as opposed to using environment variables!
## It is also STRONGLY recommended to change your root password in production
## environments
ENV MYSQL_ROOT_PASSWORD="password"
ENV MYSQL_SUPER_USER="root"

# ARG CACHEBUSTER=$RANDOM
	# Use this to prevent build cache using an old version of source files

# If installing mysql into the image, setup mysql and
# bind to accept connections from remote servers
RUN [ "$BUILD_LOCAL_DB" = "TRUE" ] && { apt-get update && apt-get install -y mariadb-server \
        && sed -i "s/\s*bind-address\s*=\s*127\.0\.0\.1/bind-address    = 0.0.0.0/" /etc/mysql/my.cnf \
        && sed -i "s/\s*bind-address\s*=\s*127\.0\.0\.1/bind-address    = 0.0.0.0/" /etc/mysql/mariadb.conf.d/50-server.cnf \
        && apt-get autoremove -y \
        && rm -rf /var/lib/apt/lists/* ; } || :

RUN mkdir /vagrant && git clone https://github.com/openeyes/oe_installer.git /vagrant \
    && cd /vagrant && git checkout tags/v2.1.1 \
    ## overwrite default password in oe-reset to be MYSQL_ROOT_PASSWORD \
    && sed -i "s/dbpassword=\"password\"/dbpassword=\"${MYSQL_ROOT_PASSWORD}\"/" /vagrant/install/oe-reset \
    && cp /vagrant/install/oe* /usr/local/bin \
    && mkdir -p /etc/openeyes \
    && echo "username=docker" > /etc/openeyes/git.conf \
    && echo "gitroot=$GIT_ORG" >> /etc/openeyes/git.conf \
    && echo "usessh=0" >> /etc/openeyes/git.conf \
    && chmod 777 /etc/openeyes/git.conf \
    && cd /


# Add the init script
COPY init-v2.sh /init.sh
COPY v2-oe-install.sh /install-oe.sh
RUN chmod a+rx /init.sh && chmod a+rx /install-oe.sh \
    && bash /install-oe.sh

EXPOSE 80 3306

ENTRYPOINT ["/init.sh"]